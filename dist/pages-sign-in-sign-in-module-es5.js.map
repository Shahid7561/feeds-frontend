{"version":3,"sources":["webpack:///src/app/pages/sign-in/sign-in.component.html","webpack:///src/app/pages/sign-in/sign-in.component.scss","webpack:///src/app/pages/sign-in/sign-in.component.ts","webpack:///src/app/pages/sign-in/sign-in.module.ts"],"names":["SignInComponent","formBuilder","commonService","router","snackBar","loginForm","group","compose","required","minLength","registerForm","validator","values","valid","data","email","value","password","post","login","subscribe","res","console","log","open","panelClass","verticalPosition","duration","localStorage","setItem","JSON","stringify","user","token","navigate","err","message","register","selector","template","routes","path","component","pathMatch","SignInModule","imports","forChild","declarations"],"mappings":"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","file":"pages-sign-in-sign-in-module-es5.js","sourcesContent":["export default \"<mat-card>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n            <h2 class=\\\"text-muted text-center\\\">Sign In</h2>\\r\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoginFormSubmit(loginForm.value)\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n                    <!-- <mat-label>Email</mat-label> -->\\r\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                    <mat-error *ngIf=\\\"loginForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"loginForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                    <!-- <mat-label>Password</mat-label> -->\\r\\n                    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" required>\\r\\n                    <mat-error *ngIf=\\\"loginForm.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"loginForm.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n                </mat-form-field> \\r\\n                <div class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-fab color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\" (click)=\\\"onLoginFormSubmit(loginForm.value)\\\">\\r\\n                        <mat-icon>exit_to_app</mat-icon>\\r\\n                    </button>\\r\\n                </div> \\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"mt-3\\\">\\r\\n                    <div class=\\\"divider w-100\\\"></div>\\r\\n                    <h3 class=\\\"text-muted auth\\\">or Sign in with one click</h3>\\r\\n                    <div class=\\\"divider w-100\\\"></div>\\r\\n                </div>               \\r\\n                \\r\\n                <div class=\\\"text-center py-2\\\">                   \\r\\n                    <svg class=\\\"social-icon\\\" viewBox=\\\"0 0 24 24\\\" matTooltip=\\\"Facebook\\\">\\r\\n                        <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z\\\" />\\r\\n                    </svg>\\r\\n                    <svg class=\\\"social-icon\\\" viewBox=\\\"0 0 24 24\\\" matTooltip=\\\"Twitter\\\">\\r\\n                        <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M17.71,9.33C18.19,8.93 18.75,8.45 19,7.92C18.59,8.13 18.1,8.26 17.56,8.33C18.06,7.97 18.47,7.5 18.68,6.86C18.16,7.14 17.63,7.38 16.97,7.5C15.42,5.63 11.71,7.15 12.37,9.95C9.76,9.79 8.17,8.61 6.85,7.16C6.1,8.38 6.75,10.23 7.64,10.74C7.18,10.71 6.83,10.57 6.5,10.41C6.54,11.95 7.39,12.69 8.58,13.09C8.22,13.16 7.82,13.18 7.44,13.12C7.81,14.19 8.58,14.86 9.9,15C9,15.76 7.34,16.29 6,16.08C7.15,16.81 8.46,17.39 10.28,17.31C14.69,17.11 17.64,13.95 17.71,9.33Z\\\" />\\r\\n                    </svg>\\r\\n                    <svg class=\\\"social-icon\\\" viewBox=\\\"0 0 24 24\\\" matTooltip=\\\"Google\\\">\\r\\n                        <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M19.5,12H18V10.5H17V12H15.5V13H17V14.5H18V13H19.5V12M9.65,11.36V12.9H12.22C12.09,13.54 11.45,14.83 9.65,14.83C8.11,14.83 6.89,13.54 6.89,12C6.89,10.46 8.11,9.17 9.65,9.17C10.55,9.17 11.13,9.56 11.45,9.88L12.67,8.72C11.9,7.95 10.87,7.5 9.65,7.5C7.14,7.5 5.15,9.5 5.15,12C5.15,14.5 7.14,16.5 9.65,16.5C12.22,16.5 13.96,14.7 13.96,12.13C13.96,11.81 13.96,11.61 13.89,11.36H9.65Z\\\" />\\r\\n                    </svg>\\r\\n                </div> \\r\\n\\r\\n            </form>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n            <h2 class=\\\"text-muted text-center\\\">Don't have an account? Sign up now!</h2>\\r\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegisterFormSubmit(registerForm.value)\\\">\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n                    <!-- <mat-label>First Name</mat-label> -->\\r\\n                    <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"name\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.name.errors?.required\\\">First Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.name.hasError('minlength')\\\">First Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n                    <!-- <mat-label>Last Name</mat-label> -->\\r\\n                    <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.lastName.errors?.required\\\">Last Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.lastName.hasError('minlength')\\\">Last Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                    <!-- <mat-label>Email</mat-label> -->\\r\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n                    <!-- <mat-label>User Name</mat-label> -->\\r\\n                    <input matInput placeholder=\\\"User Name\\\" formControlName=\\\"userName\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.userName.errors?.required\\\">User Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.userName.hasError('minlength')\\\">User Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n                    <!-- <mat-label>Company Name</mat-label> -->\\r\\n                    <input matInput placeholder=\\\"Company Name\\\" formControlName=\\\"companyName\\\" >\\r\\n                    <!-- <mat-error *ngIf=\\\"registerForm.controls.lastName.errors?.required\\\">Last Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.lastName.hasError('minlength')\\\">Last Name isn't long enough, minimum of 3 characters</mat-error> -->\\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                    <!-- <mat-label>Password</mat-label> -->\\r\\n                    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" minlength=\\\"6\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n                </mat-form-field> \\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                    <!-- <mat-label>Confirm Password</mat-label> -->\\r\\n                    <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.confirmPassword.errors?.required\\\">Confirm Password is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.confirmPassword.hasError('mismatchedPasswords')\\\">Passwords do not match</mat-error>\\r\\n                </mat-form-field>\\r\\n                <div class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-fab color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\" (click)=\\\"onRegisterFormSubmit(registerForm.value)\\\">\\r\\n                        <mat-icon>person_add</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div> \\r\\n</mat-card>\";","export default \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500;\\n}\\n\\n::ng-deep .mat-form-field-outline-start {\\n  border-radius: 28px 0 0 28px !important;\\n  min-width: 28px !important;\\n}\\n\\n::ng-deep .mat-form-field-outline-end {\\n  border-radius: 0 28px 28px 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FBQ0o7O0FBQ0E7RUFDSSx1Q0FBQTtFQUNBLDBCQUFBO0FBRUo7O0FBQ0U7RUFDRSx1Q0FBQTtBQUVKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF1dGh7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgcGFkZGluZzogN3B4IDE0cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwOyAgICBcclxufVxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtc3RhcnQge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjhweCAwIDAgMjhweCAhaW1wb3J0YW50O1xyXG4gICAgbWluLXdpZHRoOiAyOHB4ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIFxyXG4gIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtb3V0bGluZS1lbmQge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMCAyOHB4IDI4cHggMCAhaW1wb3J0YW50O1xyXG4gIH0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { emailValidator, matchingPasswords } from '../../theme/utils/app-validators';\r\n\r\nimport { account} from '../../../environments/environment';\r\nimport { CommonService} from '../../theme/utils/common.service'\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  registerForm: FormGroup;\r\n\r\n  constructor(public formBuilder: FormBuilder, \r\n    private commonService: CommonService,\r\n    public router:Router, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      'email': ['', Validators.compose([Validators.required, emailValidator])],\r\n      'password': ['', Validators.compose([Validators.required, Validators.minLength(6)])] \r\n    });\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      'name': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'lastName': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'email': ['', Validators.compose([Validators.required, emailValidator])],\r\n      'userName': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'companyName': [''],\r\n      'password': ['', Validators.required],\r\n      'confirmPassword': ['', Validators.required]\r\n    },{validator: matchingPasswords('password', 'confirmPassword')});\r\n\r\n  }\r\n\r\n  public onLoginFormSubmit(values:Object):void {\r\n    if (this.loginForm.valid) {\r\n      let data = {\r\n        email:this.loginForm.value.email,\r\n        password:this.loginForm.value.password\r\n      }\r\n      this.commonService\r\n      .post<any>(account.login, data)\r\n      .subscribe(\r\n        async (res) => {\r\n          console.log(res);\r\n          this.snackBar.open('You logged successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n          localStorage.setItem('user', JSON.stringify(res.user));\r\n          localStorage.setItem('token', res.token);\r\n          this.router.navigate(['/users']);\r\n        },err=>{\r\n          console.log(err);\r\n          this.snackBar.open(err.message, '×', { panelClass: 'danger', verticalPosition: 'top', duration: 3000 });\r\n        })\r\n    }\r\n  }\r\n\r\n  public onRegisterFormSubmit(values:Object):void {\r\n    console.log(this.registerForm.value);\r\n    this.registerForm.value['phone'] = \"1234567890\"\r\n    if (this.registerForm.valid) {\r\n      this.commonService\r\n      .post<any>(account.register, this.registerForm.value)\r\n      .subscribe(\r\n        async (res) => {\r\n          console.log(res);\r\n          this.snackBar.open('You registered successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n          let data = {\r\n            email:this.registerForm.value.email,\r\n            password:this.registerForm.value.password\r\n          }\r\n          this.commonService\r\n          .post<any>(account.login, data)\r\n          .subscribe(\r\n            async (res) => {\r\n              console.log(res);\r\n              this.snackBar.open('You logged successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n              localStorage.setItem('user', JSON.stringify(res.user));\r\n              localStorage.setItem('token', res.token);\r\n              this.router.navigate(['/users']);\r\n            },err=>{\r\n              console.log(err);\r\n              this.snackBar.open(err.message, '×', { panelClass: 'danger', verticalPosition: 'top', duration: 3000 });\r\n            })\r\n        },err=>{\r\n          console.log(err);\r\n          this.snackBar.open(err.message, '×', { panelClass: 'danger', verticalPosition: 'top', duration: 3000 });\r\n        })\r\n      \r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { SignInComponent } from './sign-in.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: SignInComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    SignInComponent\r\n  ]\r\n})\r\nexport class SignInModule { }\r\n"]}