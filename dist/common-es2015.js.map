{"version":3,"sources":["./src/app/theme/utils/app-validators.ts","./src/app/theme/utils/common.service.ts"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAAO,SAAS,cAAc,CAAC,OAAoB;IAC/C,IAAI,WAAW,GAAG,yCAAyC,CAAC;IAC5D,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACnD,OAAO,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC;KAC/B;AACL,CAAC;AAEM,SAAS,iBAAiB,CAAC,WAAmB,EAAE,uBAA+B;IAClF,OAAO,CAAC,KAAgB,EAAE,EAAE;QACxB,IAAI,QAAQ,GAAE,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,oBAAoB,GAAE,KAAK,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QAClE,IAAI,QAAQ,CAAC,KAAK,KAAK,oBAAoB,CAAC,KAAK,EAAE;YAC/C,OAAO,oBAAoB,CAAC,SAAS,CAAC,EAAC,mBAAmB,EAAE,IAAI,EAAC,CAAC;SACrE;IACL,CAAC;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBD,mBAAmB;AACwB;AACO;IAMrC,aAAa,SAAb,aAAa;IAExB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,GAAG,CAAI,OAAO;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,OAAO,CAAC,CAAC;IACnC,CAAC;IACM,IAAI,CAAI,OAAO,EAAE,IAAI;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,OAAO,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;CACF;;YAhBQ,+DAAU;;AAMN,aAAa;IAHzB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;qCAG0B,+DAAU;GAFzB,aAAa,CAUzB;AAVyB","file":"common-es2015.js","sourcesContent":["import { FormGroup, FormControl } from '@angular/forms';\r\n\r\nexport function emailValidator(control: FormControl): {[key: string]: any} {\r\n    var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \r\n    if (control.value && !emailRegexp.test(control.value)) {\r\n        return {invalidEmail: true};\r\n    }\r\n}\r\n\r\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n        let password= group.controls[passwordKey];\r\n        let passwordConfirmation= group.controls[passwordConfirmationKey];\r\n        if (password.value !== passwordConfirmation.value) {\r\n            return passwordConfirmation.setErrors({mismatchedPasswords: true})\r\n        }\r\n    }\r\n}","// angular packages\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(private http: HttpClient) { }\n\n  public get<T>(apiPath): Observable<T> {\n    return this.http.get<T>(apiPath);\n  }\n  public post<T>(apiPath, data): Observable<any> {\n    return this.http.post<any>(apiPath, data);\n  }\n}\n"],"sourceRoot":"webpack:///"}