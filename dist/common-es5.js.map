{"version":3,"sources":["webpack:///src/app/theme/utils/app-validators.ts","webpack:///src/app/theme/utils/common.service.ts"],"names":["emailValidator","control","emailRegexp","value","test","invalidEmail","matchingPasswords","passwordKey","passwordConfirmationKey","group","password","controls","passwordConfirmation","setErrors","mismatchedPasswords","CommonService","http","apiPath","get","data","post","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,aAASA,cAAT,CAAwBC,OAAxB,EAA4C;AAC/C,UAAIC,WAAW,GAAG,yCAAlB;;AACA,UAAID,OAAO,CAACE,KAAR,IAAiB,CAACD,WAAW,CAACE,IAAZ,CAAiBH,OAAO,CAACE,KAAzB,CAAtB,EAAuD;AACnD,eAAO;AAACE,sBAAY,EAAE;AAAf,SAAP;AACH;AACJ;;AAEM,aAASC,iBAAT,CAA2BC,WAA3B,EAAgDC,uBAAhD,EAAiF;AACpF,aAAO,UAACC,KAAD,EAAsB;AACzB,YAAIC,QAAQ,GAAED,KAAK,CAACE,QAAN,CAAeJ,WAAf,CAAd;AACA,YAAIK,oBAAoB,GAAEH,KAAK,CAACE,QAAN,CAAeH,uBAAf,CAA1B;;AACA,YAAIE,QAAQ,CAACP,KAAT,KAAmBS,oBAAoB,CAACT,KAA5C,EAAmD;AAC/C,iBAAOS,oBAAoB,CAACC,SAArB,CAA+B;AAACC,+BAAmB,EAAE;AAAtB,WAA/B,CAAP;AACH;AACJ,OAND;AAOH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OCjBD;;;QAQaC,aAAa;AAExB,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;AAFjB;AAAA;AAAA,4BAIVC,OAJU,EAIH;AACnB,iBAAO,KAAKD,IAAL,CAAUE,GAAV,CAAiBD,OAAjB,CAAP;AACD;AANuB;AAAA;AAAA,6BAOTA,OAPS,EAOAE,IAPA,EAOI;AAC1B,iBAAO,KAAKH,IAAL,CAAUI,IAAV,CAAoBH,OAApB,EAA6BE,IAA7B,CAAP;AACD;AATuB;;AAAA;AAAA,O;;;;cANjB;;;;AAMIJ,iBAAa,eAHzB,iEAAW;AACVM,gBAAU,EAAE;AADF,KAAX,CAGyB,E,iCAEE,+D,EAFF,GAAbN,aAAa,CAAb","file":"common-es5.js","sourcesContent":["import { FormGroup, FormControl } from '@angular/forms';\r\n\r\nexport function emailValidator(control: FormControl): {[key: string]: any} {\r\n    var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \r\n    if (control.value && !emailRegexp.test(control.value)) {\r\n        return {invalidEmail: true};\r\n    }\r\n}\r\n\r\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n        let password= group.controls[passwordKey];\r\n        let passwordConfirmation= group.controls[passwordConfirmationKey];\r\n        if (password.value !== passwordConfirmation.value) {\r\n            return passwordConfirmation.setErrors({mismatchedPasswords: true})\r\n        }\r\n    }\r\n}","// angular packages\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(private http: HttpClient) { }\n\n  public get<T>(apiPath): Observable<T> {\n    return this.http.get<T>(apiPath);\n  }\n  public post<T>(apiPath, data): Observable<any> {\n    return this.http.post<any>(apiPath, data);\n  }\n}\n"]}